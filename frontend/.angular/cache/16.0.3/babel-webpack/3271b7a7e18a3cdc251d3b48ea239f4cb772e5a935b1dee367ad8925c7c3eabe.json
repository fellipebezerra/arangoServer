{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../data.service\";\nclass AddUserComponent {\n  constructor(formBuilder, dataService) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.userForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.userForm.valid) {\n      this.dataService.createUser(this.userForm.value).subscribe(() => {\n        console.log('User created successfully');\n        this.userForm.reset();\n      });\n    }\n  }\n}\nAddUserComponent.ɵfac = function AddUserComponent_Factory(t) {\n  return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataService));\n};\nAddUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddUserComponent,\n  selectors: [[\"app-add-user\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function AddUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddUserComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Add User\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AddUserComponent };","map":{"version":3,"names":["Validators","AddUserComponent","constructor","formBuilder","dataService","userForm","group","name","required","email","ngOnInit","onSubmit","valid","createUser","value","subscribe","console","log","reset","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","DataService","selectors","decls","vars","consts","template","AddUserComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AddUserComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["D:\\poc\\crud-angular\\frontend\\src\\app\\add-user\\add-user.component.ts","D:\\poc\\crud-angular\\frontend\\src\\app\\add-user\\add-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  userForm: FormGroup = this.formBuilder.group({\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]]\n  });\n\n  constructor(private formBuilder: FormBuilder, private dataService: DataService) { }\n\n  ngOnInit(): void { }\n\n  onSubmit() {\n    if (this.userForm.valid) {\n      this.dataService.createUser(this.userForm.value).subscribe(() => {\n        console.log('User created successfully');\n        this.userForm.reset();\n      });\n    }\n  }\n}\n","<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"name\">Name</label>\n      <input id=\"name\" type=\"text\" formControlName=\"name\" required>\n    </div>\n  \n    <div>\n      <label for=\"email\">Email</label>\n      <input id=\"email\" type=\"email\" formControlName=\"email\" required>\n    </div>\n  \n    <button type=\"submit\">Add User</button>\n  </form>\n  "],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAGnE,MAKaC,gBAAgB;EAM3BC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IALjE,KAAAC,QAAQ,GAAc,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAC3CC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC;KACpD,CAAC;EAEgF;EAElFC,QAAQA,CAAA,GAAW;EAEnBC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACN,QAAQ,CAACO,KAAK,EAAE;MACvB,IAAI,CAACR,WAAW,CAACS,UAAU,CAAC,IAAI,CAACR,QAAQ,CAACS,KAAK,CAAC,CAACC,SAAS,CAAC,MAAK;QAC9DC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxC,IAAI,CAACZ,QAAQ,CAACa,KAAK,EAAE;MACvB,CAAC,CAAC;;EAEN;;AAjBWjB,gBAAgB,C;mBAAhBA,gBAAgB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;AAAhBvB,gBAAgB,C;QAAhBA,gBAAgB;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT7BZ,EAAA,CAAAc,cAAA,cAAqD;MAAxBd,EAAA,CAAAe,UAAA,sBAAAC,mDAAA;QAAA,OAAYH,GAAA,CAAArB,QAAA,EAAU;MAAA,EAAC;MAChDQ,EAAA,CAAAc,cAAA,UAAK;MACed,EAAA,CAAAiB,MAAA,WAAI;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MAC9BlB,EAAA,CAAAmB,SAAA,eAA6D;MAC/DnB,EAAA,CAAAkB,YAAA,EAAM;MAENlB,EAAA,CAAAc,cAAA,UAAK;MACgBd,EAAA,CAAAiB,MAAA,YAAK;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MAChClB,EAAA,CAAAmB,SAAA,eAAgE;MAClEnB,EAAA,CAAAkB,YAAA,EAAM;MAENlB,EAAA,CAAAc,cAAA,gBAAsB;MAAAd,EAAA,CAAAiB,MAAA,gBAAQ;MAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;MAXrClB,EAAA,CAAAoB,UAAA,cAAAP,GAAA,CAAA3B,QAAA,CAAsB;;;;;;SDSfJ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}