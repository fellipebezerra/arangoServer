{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../data.service\";\nimport * as i3 from \"@angular/router\";\nclass EditUserComponent {\n  constructor(formBuilder, dataService, route) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.route = route;\n  }\n  ngOnInit() {\n    const userId = this.route.snapshot.paramMap.get('id');\n    if (userId) {\n      this.userId = userId;\n      this.dataService.getUser(this.userId).subscribe(user => {\n        this.userForm = this.formBuilder.group({\n          name: [user.name, Validators.required],\n          email: [user.email, [Validators.required, Validators.email]]\n        });\n      });\n    }\n  }\n  onSubmit() {\n    if (this.userForm.valid) {\n      this.dataService.updateUser(this.userId, this.userForm.value).subscribe(() => {\n        console.log('User updated successfully');\n      });\n    }\n  }\n}\nEditUserComponent.ɵfac = function EditUserComponent_Factory(t) {\n  return new (t || EditUserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nEditUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditUserComponent,\n  selectors: [[\"app-edit-user\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-user works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EditUserComponent };","map":{"version":3,"names":["Validators","EditUserComponent","constructor","formBuilder","dataService","route","ngOnInit","userId","snapshot","paramMap","get","getUser","subscribe","user","userForm","group","name","required","email","onSubmit","valid","updateUser","value","console","log","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","DataService","i3","ActivatedRoute","selectors","decls","vars","template","EditUserComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\poc\\crud-angular\\frontend\\src\\app\\edit-user\\edit-user.component.ts","D:\\poc\\crud-angular\\frontend\\src\\app\\edit-user\\edit-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n  userForm!: FormGroup;  // Adicione a exclamação para indicar que esses campos serão inicializados posteriormente.\n  userId!: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dataService: DataService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    const userId = this.route.snapshot.paramMap.get('id');\n    if (userId) {\n      this.userId = userId;\n      this.dataService.getUser(this.userId).subscribe((user: any) => {\n        this.userForm = this.formBuilder.group({\n          name: [user.name, Validators.required],\n          email: [user.email, [Validators.required, Validators.email]]\n        });\n      });\n    }\n  }\n\n  onSubmit() {\n    if (this.userForm.valid) {\n      this.dataService.updateUser(this.userId, this.userForm.value).subscribe(() => {\n        console.log('User updated successfully');\n      });\n    }\n  }\n}\n","<p>edit-user works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAInE,MAKaC,iBAAiB;EAI5BC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,KAAqB;IAFrB,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,KAAK,GAALA,KAAK;EACX;EAEJC,QAAQA,CAAA;IACN,MAAMC,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACrD,IAAIH,MAAM,EAAE;MACV,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACH,WAAW,CAACO,OAAO,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACK,SAAS,CAAEC,IAAS,IAAI;QAC5D,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACX,WAAW,CAACY,KAAK,CAAC;UACrCC,IAAI,EAAE,CAACH,IAAI,CAACG,IAAI,EAAEhB,UAAU,CAACiB,QAAQ,CAAC;UACtCC,KAAK,EAAE,CAACL,IAAI,CAACK,KAAK,EAAE,CAAClB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACkB,KAAK,CAAC;SAC5D,CAAC;MACJ,CAAC,CAAC;;EAEN;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,QAAQ,CAACM,KAAK,EAAE;MACvB,IAAI,CAAChB,WAAW,CAACiB,UAAU,CAAC,IAAI,CAACd,MAAM,EAAE,IAAI,CAACO,QAAQ,CAACQ,KAAK,CAAC,CAACV,SAAS,CAAC,MAAK;QAC3EW,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C,CAAC,CAAC;;EAEN;;AA7BWvB,iBAAiB,C;mBAAjBA,iBAAiB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,cAAA;AAAA;AAAjB/B,iBAAiB,C;QAAjBA,iBAAiB;EAAAgC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV9Bb,EAAA,CAAAe,cAAA,QAAG;MAAAf,EAAA,CAAAgB,MAAA,uBAAgB;MAAAhB,EAAA,CAAAiB,YAAA,EAAI;;;;;SDUVzC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}